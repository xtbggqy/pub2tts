# PubMed文献处理系统配置文件
# 使用格式: 参数=值

#===============================
# 文献检索配置
#===============================
# 搜索关键词，支持pubmed高级检索语法，支持AND、OR、NOT等高级检索
query=pangenome

# 多关键词查询(用逗号分隔，比如: cancer,diabetes,alzheimer)
# 如果此项不为空，将优先于单一查询(query)执行
# multi_query=pangenome,plant,genome

# 是否润色搜索词(yes/no)，将使用AI优化搜索词，转换为PubMed高级检索格式
enhance_query=no

# 是否获取引用数量 yes/no (会多花几分钟)
get_citations=no

# 时间范围设置 下面两种方式都不设置的话，系统默认设置为3年
# 第一优先级: 明确的起止日期 (格式: YYYY-MM-DD 或 YYYY/MM/DD)
start_date=
end_date=
# 第二优先级: 时间周期（单位：年），如0.5表示最近6个月，1表示最近一年
time_period=2.0

# 最大获取结果数量
max_results=50

# 高级检索设置 - 批处理大小
# 大于此值时启用并行处理以提高性能
parallel_threshold=10

# PubMed需要提供邮箱才能获取信息，正常邮箱即可（已经够用了），如果想速度更快，可到Pubmed官网获取API
email=test@gmail.com

# PubMed文献排序方式
# - best_match: 最佳匹配(默认)
# - most_recent: 最近添加
# - pub_date: 出版日期
# - first_author: 第一作者
# - journal: 期刊名称
pubmed_sort=best_match

#===============================
# 文件路径配置
#===============================
# 文献检索输出CSV文件
output_file=out//pubmed_results.csv

# 期刊增强文件路径
input_sort=out//pubmed_results.csv
output_sort=out//pubmed_enhanced.csv

# 文献翻译文件路径
input_llm=out//pubmed_enhanced.csv
output_llm=out//pubmed_enhanced_llm.csv


#===============================
# 期刊信息配置
#===============================
# 期刊数据文件路径，这个文件是zoterostyle.json的备份，可以去自己zotero的路径下找，也可以根据格式进行修改
journal_data_path=zoterostyle.json

# 文章排序方式:
# - impact_factor: 按影响因子排序(从高到低)
# - journal: 按期刊名称排序(字母顺序)
# - quartile: 按分区排序(Q1>Q2>Q3>Q4),同分区内按影响因子
# - date: 按发表日期排序(从新到旧)
article_sort=impact_factor

#===============================
# 期刊信息增强高级设置
#===============================
# 并行处理线程数 (更高的值可能提高速度，但会增加内存使用)
journal_max_workers=16

# 期刊信息处理批量大小
journal_batch_size=100

# 是否启用期刊匹配缓存 (提高速度但使用更多内存)
journal_cache_enabled=no

# 是否预加载期刊名称相似度数据 (提高速度但延长启动时间)
journal_preload_similarity=yes

# 期刊名称匹配阈值 (0-1之间，越高匹配越精确但可能漏掉部分期刊)
journal_match_threshold=0.7

#===============================
# AI翻译和理解设置
#===============================
# 处理的最大文章数
max_articles=50

# AI模型名称
ai_model=qwen-turbo

# AI调用超时时间(秒)
ai_timeout=60

# 调用API失败时的重试次数
retry_times=3

# 通义千问API密钥 从阿里云官网获得https://bailian.console.aliyun.com/
api_key=
# API基础URL
api_base_url=https://dashscope.aliyuncs.com/compatible-mode/v1

# 是否使用大模型优化关键词(yes/no)
optimize_keywords=no

# API价格设置（单位：元/百万tokens）
# 输入token价格
api_price_input=0.3
# 输出token价格
api_price_output=0.6

#===============================
# HTML浏览器设置
#===============================
# 是否生成HTML浏览器(yes/no)
generate_html=yes

# HTML页面标题
html_page_title=文献浏览器

# HTML文献浏览器显示设置
html_default_columns=translated_title,journal,year,pmid,quartile,translated_abstract,translated_keywords
html_search_field=keywords

# 每页显示文章数量
articles_per_page=10

# 是否启用暗色模式(yes/no)
html_dark_mode=no

# 是否显示英文原文(yes/no)
html_show_english=yes

# 是否高亮搜索关键词(yes/no)
html_highlight_keywords=yes

# 是否显示统计图表(yes/no)
html_show_charts=yes

# 是否在浏览器中自动打开生成的HTML(yes/no)
html_auto_open=yes

#===============================
# AI翻译高级设置
#===============================
# 批量翻译大小（每个API请求处理的文章数量）
translation_batch_size=20

# 是否启用并行翻译处理(yes/no)
parallel_translation=yes

# 并行翻译的最大并发请求数
max_parallel_requests=20

# 是否使用翻译缓存以提高速度(yes/no)
use_translation_cache=yes

#===============================
# 期刊可视化设置
#===============================
# 是否启用可视化功能(yes/no)
viz_enabled=yes

# 可视化输出目录
viz_output_dir=out/viz

# 图表格式(png, jpg, pdf, svg)
viz_format=png

# 图表样式(ggplot, seaborn, classic, dark_background等)
viz_style=ggplot

# 图表DPI(分辨率)
viz_dpi=300

# 图表大小(宽,高，单位为英寸)
viz_figsize=10,6

# 是否显示影响因子趋势(yes/no) - 默认关闭
viz_show_if=no

# 是否显示分区分布(yes/no)
viz_show_quartile=yes

# 是否显示期刊分布(yes/no) - 默认关闭
viz_show_journals=no

# 是否显示发表年份分布(yes/no)
viz_show_years=yes

# 是否显示关键词词云图(yes/no) - 新增选项
viz_show_wordcloud=yes

# 词云图最大显示词数 - 新增选项
viz_wordcloud_max=100


# 期刊可视化高级设置
# 颜色主题(default, modern, pastel, dark, scientific)
viz_color_theme=default

# 图表字体大小
viz_font_size=11

# 图表标题字体大小
viz_title_size=14

# 图表标签字体大小
viz_label_size=12

# 网格透明度(0-1)
viz_grid_alpha=0.3

# 是否启用交互式图表(yes/no)
viz_interactive=no

